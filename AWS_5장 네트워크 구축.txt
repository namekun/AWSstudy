#
# 5. 네트워크 구축
#


# 5.1 네트워크 기초 기술

 * 5.1.1 네트워크 주소 (Network Address)
   : 네트워크 상의 노드를 식별

     cf.) 노드: 네트워크를 구성하는 기기
            - 서버, 스위치, 라우터, 게이트웨이 등)

  1) MAC Address
     - NIC에 물리적으로 배정된 48비트 주소
     - 앞 24비트 : 네트워크 부품 업체 식별 번호
     - 뒤 24비트 : 중복되지 않도록 업체에서 할당
     - OSI 기본 참조 모델의 2계층 DataLink 

  2) IP Address
     - 인터넷/인트라넷에 접속된 노드에 할당된 식별 번호
     - MAC과 다르게 네트워크 관리자가 할당

     - IPv4
       - 32 비트, 8 비트씩 4개로 구분

         11000000101010000000000000000001

         11000000.10101000.00000000.00000001

            192  .   168  .    0   .    1

       cf.) IPv6
            - 128 비트로 표기

     - 2의 32승 = 약 42억 개의 기기가 네트워크에 접속 가능
       - IP 주소 고갈

     - Network Address와 Host Address로 구분            
       ~ 네트워크, 네트워크 식별자/주소/번호
         : 네트워크 상에서 노드들을 같은 그룹으로 묶는 주소
           즉, 동일 네트워크에 속하는 노드들은 같은 네트워크 주소를 할당 받음
           동일 네트워크의 노드들은 직접 서로 통신 가능
         : 32 비트 중 앞에서 몇 비트를 네트워크 주소로 할당
       ~ 호스트, 호스트 식별자/주소/번호
         : 네트워크 안에서 노드가 갖는 NIC 마다 할당
         : 같은 네트워크 안에서는 중복되는 IP 주소를 할당할 수 없음

      비유) 호텔방 번호 붙이기
        * 한 층에 호텔방이 최대 9 개일 때 층을 고려한 방 번호
            층수+방번호 :  11 --> 1층 1호
                          111 --> 11층 1호(O), 1층 11호(X)
        * 한 층에 호텔방이 최대 99 개일 때 층을 고려한 방 번호
            층수+방번호 :  101 --> 1층 1호
                           399 --> 3층 99호
                          1199 --> 11층 99호(O), 1층 199호(X)
          ==> 층 : 네트워크
              같은 층 : 같은 네트워크
              방 : 호스트(노드)

     - 네트워크와 호스트 구분 방법
       ~ 서브넷 마스크(Subnet Mask)에 의한 표기
         : 네트워크 부분을 '1', 호스트 부분을 '0'으로 표시

       <IP 주소>       11000000.10101000.00000000.00000001
                          192  .   168  .    0   .   1

       <서브넷 마스크> 11111111.11111111.00000000.00000000
                          255  .   255  .    0   .   0

           => 192.168 : 네트워크 주소
           => 0.1     : 호스트 주소

       ~ 사이더(CIDR, Classless Inter-Domain Routing)에 의한 표기
         : 네트워크를 나타내는 비트 수 n을 IP 주소 뒤에 표시

       <IP 주소> 192.168.0.1/16
                 => 앞에서 16 비트가 네트워크 부분
                    나머지 16(32-16) 비트가 호스트 부분

                 11000000.10101000.00000000.00000001

     - 특수한 호스트 주소
       ~ 네트워크 주소: 호스트 주소 부분이 모두 0
       ~ 브로드캐스트 주소: 호스트 주소 부분이 모두 1
         : 메시지를 네트워크의 모든 시스템에 전달(브로드캐스트)하는 데 사용하는 공통 주소
       ~ 하나의 네트워크에서는 네트워크 주소와 브로드캐스트 주소를 제외한 만큼의 호스트 주소를 할당할 수 있음

       예) 192.168.0.0/16
            - 네트워크 주소: 192.168.0.0
            - 브로드캐스트 주소: 192.168.255.255
            - IP 주소 할당 가능한 호스트 개수: 2^16 - 2 = 65534 개
              : 192.168.0.1 ~ 192.168.255.254
            
       예) 192.168.0.0/24
            - 네트워크 주소: 192.168.0.0
            - 브로드캐스트 주소: 192.168.0.255
            - IP 주소 할당 가능한 호스트 개수: 2^8 - 2 = 254 개
              : 192.168.0.1 ~ 192.168.0.254
              

 * 5.1.2 네트워크 프로토콜
   : 통신 규약, 통신 프로토콜
   : 컴퓨터나 원거리 통신 장비 사이에서 메시지를 주고 받는 양식과 규칙의 체계
   : '상호 간에 어느 정도의 약속으로 통신할 것인가'에 대한 약속

       cf.) 통신 규약
          * 통신 프로토콜
            - 원문보기: https://ko.wikipedia.org/wiki/통신_프로토콜

   : 컴퓨터 네트워크 프로토콜 디자인과 통신을 기능별 계층으로 나누어 설명한 OSI 참조 모델을 따름

       cf.) OSI 참조 모델, OSI 7 계층 모델
          * OSI 모형
            - 원문보기: https://ko.wikipedia.org/wiki/OSI_모형
          * 네트워크의 기본 'OSI 7계층'··· 한번에 이해하고 외우는 방법
            - 원문보기: http://www.ciokorea.com/news/36536
            - 모든 사람은 데이터 처리가 필요한 듯 하다(All-People-Seem-To-Need-Data-Processing)

            IceMan) "PD" 양반 "새로운 기술(NT)"로 지어진 "SPA"에 목욕하러 갑시다.


 * 5.1.3 방화벽(Firewall)과 라우터(Router)
   : 네트워크 제어하는 기기

   - 방화벽
     : 내부 네트워크와 외부의 통신 제어
       내부 네트워크의 안전 유지

     ~ 패킷 필터 유형(Packet Filter)
       = 패킷
          : 패키지(package)와 덩어리를 뜻하는 버킷(bucket)의 합성어
            통신망을 통해 전송하기 쉽도록 자른 데이터의 전송 단위
          : 송신자 IP 주소/포트번호, 수신자 IP 주소/포트번호 포함
       = 접근 제어 리스트(ACL, Access Control List)
          : 패킷 필터링 규칙

     ~ (애플리케이션) 게이트웨이 유형
       = 패킷이 아닌 애플리케이션 프로토콜로 제어
       = 프록시 서버(Proxy Server)

       cf.) 방화벽
          * 방화벽_(네트워킹)
            - 원문보기: https://ko.wikipedia.org/wiki/방화벽_(네트워킹)

   - 라우터
    : 둘 이상의 다른 네트워크 사이를 중계하기 위한 네트워크 기기
    : OSI 3 Layer
    : 경로 선택
      ~ 정적 라우팅(Static Routing)
        : 미리 설정된 라우팅 테이블에 근거하여 경로 결정
      ~ 동적 라우팅(Dynamic Routing)
        : 라우터 상호 간에 경로 정보를 교환하여 최적의 경로 결정

       cf.) 라우팅
            : 하나의 컴퓨터로 자신이 속하지 않은 네트워크에 속한 컴퓨터와 통신을 할 때
              발생된 패킷을 목적지까지 전달해 주는 과정

          * 라우팅이란?
            - 원문보기: http://ggo-ack.tistory.com/entry/라우팅이란
          
 
# 5.2 보안 그룹에 의한 패킷 필터링

 * 5.2.1 보안 그룹(Security Group)
   : AWS 인스턴스(EC2, RDS 등)에 대한 접근(Inbound)과 
     인스턴스로부터의 접근(Outbound)에 대한 패킷을
     포트 번호로 제어하기 위한 설정
   : 패킷에 대한 필터링 정책
   : 일종의 접근 제어 리스트(ACL)


 * 5.2.2 보안 정책의 검토

   - 샘플 정책

       'RDS 인스턴스에서 관리하고 있는 도서 정보가 부정 유출되지 않도록 대책을 실시한다'

   - 웹 애플리케이션 서버
     : 통신 허가 - 모든 곳에서 오는 22번 포트, 8080 포트
       --> 통신 허가 - 임의의 장소에서 오는 8080 포트

   - 데이터베이스 서버
     : 통신 허가 - 모든 곳에서 오는 3306번 포트
       --> 통신 허가 - EC2 인스턴스에서만 오는 3306 포트

     cf.) 그림 5-12, 5-13 참조(p.250, 251)


# 5.3 VPC에 의한 가상 네트워크 구축

 * 5.3.1 Amazon VPC (Virtual Private Cloud)
   : AWS 네트워크 속에서 가상 네트워크 생성 서비스
     ~ 네트워크 요건에 근거한 IP 주소 범위 선택
     ~ 서브넷 생성
     ~ 가상 라우터
     ~ 게이트웨이
     ~ VPC 네트워크와 온프레미스 간 VPN 접속 생성 가능
       : AWS의 서비스를 온프레미스의 데이터 센터에서 직접 사용 가능


 * 5.3.2 (VPC) 네트워크 구성 검토
   - 검토 사항
     ~ 서버 나누기
     ~ 서브넷 분할
     ~ IP 주소 할당
     ~ 라우팅
     ~ 방화벽

   - 그림 5-25 (p.263) 참고 
     ~ 서버 나누기
       : 로드 밸런서, WAS, 데이터베이스 서버
     ~ 서브넷 분할
       : ELB 서브넷, WAS 서브넷, RDS 서브넷(이중화)
     ~ IP 주소 할당
       : ELB 서브넷 - 10.0.0.0/24
         WAS 서브넷 - 10.0.1.0/24
         RDS 서브넷 - 10.0.100.0/24, 10.0.200.0/24
     ~ 라우팅
       : ELB 서브넷과 외부 인터넷 연결
     ~ 방화벽
       : ELB 서브넷 - Inbound: 8080 포트, 위치무관
       : WAS 서브넷 - Inbound: 8080 포트, ELB(10.0.0.0/24)로부터만
       : RDS 서브넷 - Inbound: 3306 포트, WAS(10.0.1.0/24)로부터만


 * 5.3.3 VPC 생성
   - 그림 5-26 가상 네트워크 구성 (p.264) 참고 

   1) [VPC] VPC 신규 생성

   2) [VPC] 서브넷 마스크 생성
      - ELB-Subnet: 10.0.0.0/24
      - WebAP-Subnet: 10.0.1.0/24
    
      : 두 개의 RDS 서브넷은 서로 다른 AZ에 만들어야 함
      - RDS-Master-Subnet: 10.0.100.0/24
      - RDS-Slave-Subnet: 10.0.200.0/24

   3) [RDS] DB 서브넷 그룹 생성
      : 서브넷을 생성하고 2)에서 만든 두 개의 RDS 서브넷을 추가


 * 5.3.4 가상 라우터(인터넷 게이트웨이) 생성
   : VPC에 속한 서브넷이 외부 인터넷에 접속하려면 인터넷 게이트웨이 필요
   : 인터넷과 직접 접속하는 ELB-Subnet을 위한 인터넷 게이트웨이 생성

   1) [VPC] 인터넷 게이트웨이 생성

   2) [VPC] 경로 테이블 생성
      - VPC 로컬 네트워크(10.0.0.0/16) 이외의 수신지 패킷을 인터넷 게이트웨이로 중계하도록 설정

   3) [VPC] 서브넷에 대한 경로 테이블 설정


 * 5.3.5 방화벽(보안 그룹) 생성
   : 패킷 필터링
   - 그림 5-46 보안 그룹 구성 (p.276) 참고

   1) [EC2] 보안 그룹 생성
      - ELB-Sec
      - WebAP-Sec
      - RDS-Sec


 * 5.3.6 서버(인스턴스) 생성

   1) [RDS] RDS 인스턴스 두 대 생성
      - 직접 생성 또는 스냅샷으로 생성
      - 식별자: RDS-Master, RDS-Slave
        (스냅샷으로 생성)
          [RDS] - [스냅샷] - [스냅샷 작업] - [스냅샷 복원]

   2) [EC2] EC2 인스턴스 두 대 생성
      - Tomcat 8 설치된 커스텀 AMI로부터 생성
      - Name 태그: WebAP-node01, WebAP-node02


 * 5.3.7 로드 밸런서 생성
   - 그림 5-51 로드 밸런서로부터 접근 구성 (p.276) 참고

   1) [EC2] 로드 밸런서 생성

   2) [EC2] 로드 밸런서 정의
      - 로드 밸런서 이름
      - LB 생성할 VPC
      - 리스너 구성
      - 서브넷 선택

   3) [EC2] 보안 그룹 할당

   4) [EC2] 보안 설정 구성

   5) [EC2] 상태 검사 구성(Health Check)
      - Ping 대상: /WebAPSample/top.jsp

   6) [EC2] EC2 인스턴스 추가
      - 'WebAP-node01', 'WebAP-node02' 둘 다 추가

   7) [EC2] 태그 추가


 * 5.3.8 관리용 네트워크 구성
   : 데이터베이스 서버 및 WAS 유지/관리용
     관리 작업시에만 ELB 배치된 서브넷 내에 임시 EC2 인스턴스를 일시적으로 생성
     관리 작업 끝나면 신속히 임시 EC2 인스턴스 정지

   - 그림 5-63 유지/보수용 네트워크 구성 (p.288) 참고

   1) [EC2] 유지보수용 보안 그룹 생성
      : 22번 포트에 '내 IP' 지정
        - 현재 AWS 관리 콘솔에 접속하고 있는 IP 주소가 자동으로 할당됨

   2) [EC2] 유지보수용 EC2 인스턴스 생성

   3) [EC2] WAS 인스턴스에 유지보수용 보안 그룹 할당

   4) [RDS] RDS 인스턴스에 유지보수용 보안 그룹 할당


 * 5.3.9 유지보수 환경 동작 확인

   1) [PuTTY] 유지보수용 EC2 인스턴스에 로그인

   2) [PuTTY] 유지보수용 EC2 인스턴스에서 RDS 인스턴스에 접근

   3) [PuTTY] 비밀 키 업로드

   4) [PuTTY] 다른 EC2 인스턴스에 대한 접근

   5) [웹브라우저] 동작 확인

   6) [EC2] 유지보수용 EC2 인스턴스 중지


